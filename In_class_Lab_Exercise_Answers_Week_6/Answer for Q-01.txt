#include <iostream>
using namespace std;

class Stack {
    private:
        int size;
        int* stackArray;
        int top;
    public:
        Stack(int stackSize) {
            size = stackSize;
            stackArray = new int[size];
            top = -1;
        }
        ~Stack() {
            delete[] stackArray;
        }
        void push(int value) {
            if (isFull()) {
                cout << "Stack Overflow" << endl;
            }
            else {
                top++;
                stackArray[top] = value;
            }
        }
        int pop() {
            if (isEmpty()) {
                cout << "Stack Underflow" << endl;
                return -1;
            }
            else {
                int temp = stackArray[top];
                top--;
                return temp;
            }
        }
        bool isEmpty() {
            return (top == -1);
        }
        bool isFull() {
            return (top == size - 1);
        }
        int stackTop() {
            if (isEmpty()) {
                cout << "Stack is empty" << endl;
                return -1;
            }
            else {
                return stackArray[top];
            }
        }
        void display() {
            if (isEmpty()) {
                cout << "Stack is empty" << endl;
            }
            else {
                cout << "Stack elements: ";
                for (int i = top; i >= 0; i--) {
                    cout << stackArray[i] << " ";
                }
                cout << endl;
            }
        }
};

int main() {
    Stack s(5);
    s.push(1);
    s.push(2);
    s.push(3);
    s.push(4);
    s.push(5);
    s.push(6);
    s.pop();
    s.pop();
    s.display();
    cout << "Top of the stack: " << s.stackTop() << endl;
    return 0;
}
